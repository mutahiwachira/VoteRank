shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
log(5,4)
set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,3)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4.3)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4.3)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4.3)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4.3)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
#set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
#set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
#set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
#set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
#set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
#set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
#set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
#set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
#set.seed(145)
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
cat(paste0("Fraction of trust held by the top 20%: ", total_trust_of_the_top_20))
check_pareto_law <- function(){
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
shares_of_trust_by_top_20
check_pareto_law <- function(){
population_size = 10000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20))
log
lattice::densityplot(shares_of_trust_by_top_20)
lattice::densityplot(data = shares_of_trust_by_top_20)
lattice::densityplot(shares_of_trust_by_top_20)
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20),title = "Test")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20))
title("Share of trustworthiness in the top 20% of the population")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20))
title("Share of trustworthiness in the top 20% of the population")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
density(shares_of_trust_by_top_20)
title("Share of trustworthiness in the top 20% of the population")
shares_of_trust_by_top_20
?density
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20), main = "Share of population trust by the top 20% of most trustworthy people.")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20), main = "Share of population trust by the top 20% of most trustworthy people.", xlab = "Percentile of Trustworthiness", ylab = "Density")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20), main = "Share of population trust by the top 20% of most trustworthy people.", xlab = "Percentile of Trustworthiness", ylab = "Density")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20), main = "Share of population trust by the top 20% of most trustworthy people.", xlab = "Percentile of Trustworthiness", ylab = "Density")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20), main = "Share of population trust by the top 20% of most trustworthy people.", xlab = "Percentile of Trustworthiness", ylab = "Density")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20), main = "Share of population trust by the top 20% of most trustworthy people.", xlab = "Percentile of Trustworthiness", ylab = "Density")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20), main = "Share of population trust by the top 20% of most trustworthy people.", xlab = "Percentile of Trustworthiness", ylab = "Density")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20), main = "Share of population trust by the top 20% of most trustworthy people.", xlab = "Percentile of Trustworthiness", ylab = "Density")
26^3
?sample
sample(1:1000, 1)
sample(1:1000, 1)
sample(1:1000, 1)
sample(1:1000, 1)
crossprod(LETTERS, LETTERS)
LETTERS * LETTERS
LETTERS
expand.grid(LETTERS)
expand.grid(LETTERS, LETTERS)
?outer
outer(LETTERS, LETTERS, paste)
outer(LETTERS, LETTERS, paste0)
outer(LETTERS, LETTERS, LETTERS, paste0)
outer(LETTERS, LETTERS, paste0)
c(outer(LETTERS, LETTERS, paste0))
c
partial(outers, LETTERS, paste0)
partial(outer, LETTERS, paste0)
partial(outer, LETTERS, paste0)(LETTERS)
?partial
outer
args(outer)
partial(outer, X = LETTERS, FUN = paste0)(LETTERS)
partial(outer, X = LETTERS, FUN = paste0)
# Create the population ID's
cross_names <- compose(c, partial(outer, X = LETTERS, FUN = paste0))
cross_names()
cross_names(LETTERS)
LETTERS |> cross_names()
LETTERS |> cross_names() |> cross_names()
?repeat
repeat
4
rep(cross_names, 5)
replicate(cross_names, 5)
?replicate
# 1. Create the population ID's
# Use `compose` to make a function, `c` is there because `outer` returns a matrix
cross_names <- compose(c, partial(outer, X = LETTERS, FUN = paste0))
ids <- LETTERS  %>% # e.g., "P"
cross_names() %>% # e.g., "PX"
cross_names()     # e.g.  "PXH"
# checks
assertthat::assert_that(length(ids) == 26^3)
# 2. Create the population trustworthiness scores
trust_scores <- EnvStats::rpareto(pop_size, location = 1, shape = pareto_shape)
?assertthat::assert_that()
make_population <- function(pop_size, pareto_shape = log(5,4), seed = NULL){
# Set the seed, for reproducibility; otherwise choose a random seed
if(is.null(seed)) seed <- sample(1:1000, 1)
set.seed(seed)
# 1. Create the population ID's
# Use `compose` to make a function, `c` is there because `outer` returns a matrix
cross_names <- compose(c, partial(outer, X = LETTERS, FUN = paste0))
ids <- LETTERS  %>% # e.g., "P"
cross_names() %>% # e.g., "PX"
cross_names()     # e.g.  "PXH"
# checks
assertthat::assert_that(length(ids) == 26^3)
# 2. Create the population trustworthiness scores
trust_scores <- EnvStats::rpareto(pop_size, location = 1, shape = pareto_shape)
# 3. Make the dataframe/tibble
result <- tibble(id = ids, trust_score = trust_scores)
return(result)
}
make_population()
make_population <- function(pop_size = 100, pareto_shape = log(5,4), seed = NULL){
# Set the seed, for reproducibility; otherwise choose a random seed
if(is.null(seed)) seed <- sample(1:1000, 1)
set.seed(seed)
# 1. Create the population ID's
# Use `compose` to make a function, `c` is there because `outer` returns a matrix
cross_names <- compose(c, partial(outer, X = LETTERS, FUN = paste0))
ids <- LETTERS  %>% # e.g., "P"
cross_names() %>% # e.g., "PX"
cross_names()     # e.g.  "PXH"
# checks
assertthat::assert_that(length(ids) == 26^3)
# 2. Create the population trustworthiness scores
trust_scores <- EnvStats::rpareto(pop_size, location = 1, shape = pareto_shape)
# 3. Make the dataframe/tibble
result <- tibble(id = ids, trust_score = trust_scores)
return(result)
}
make_population()
make_population <- function(pop_size = 100, pareto_shape = log(5,4), seed = NULL){
# Set the seed, for reproducibility; otherwise choose a random seed
if(is.null(seed)) seed <- sample(1:1000, 1)
set.seed(seed)
# 1. Create the population ID's
# Use `compose` to make a function, `c` is there because `outer` returns a matrix
cross_names <- compose(c, partial(outer, X = LETTERS, FUN = paste0))
ids <- LETTERS  %>% # e.g., "P"
cross_names() %>% # e.g., "PX"
cross_names() %>% # e.g.  "PXH"
sample(size = pop_size, replace = FALSE)
# checks
assertthat::assert_that(length(ids) == 26^3)
# 2. Create the population trustworthiness scores
trust_scores <- EnvStats::rpareto(pop_size, location = 1, shape = pareto_shape)
# 3. Make the dataframe/tibble
result <- tibble(id = ids, trust_score = trust_scores)
return(result)
}
make_population()
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph.R")
make_population()
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph.R")
make_population()
make_population()
make_population()
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
knitr::opts_chunk$set(echo = TRUE)
source("make_graph.R")
check_pareto_law <- function(){
population_size = 1000
min_val = 1
eighty_twenty_constant <- log(5,4)
x <- EnvStats::rpareto(n = population_size,
location = min_val,
shape = eighty_twenty_constant)
ind_top_20_people <- x > quantile(x, 0.75) #indexes the top 20% of people
total_trust_of_the_top_20 <- sum(x[ind_top_20_people]) / sum(x)
return(total_trust_of_the_top_20)
}
shares_of_trust_by_top_20 <- replicate(100, check_pareto_law())
plot(density(shares_of_trust_by_top_20), main = "Share of population trust by the top 20% of most trustworthy people.", xlab = "Percentile of Trustworthiness", ylab = "Density")
make_population()
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph_notes.Rmd")
make_population()
make_population()
install.packages("DT")
DT::datatable(iris)
DT::datatable(iris,style = "bootstrap")
source("C:/_code/projects/vote_rank_algo/analysis/scripts/make_graph.R")
